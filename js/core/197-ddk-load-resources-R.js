DDK.loadResources = function () {	var widgets = DDK.config.widget,		dataConfig, url;	// if no page content is specified	// load the documentation home page for the Responsive Template	if (!(widgets.css || widgets.content || widgets.js)) {		// ... create doc home page CSS/Content/JS widgets	}		// load dynamic script	if (widgets.js) {		$.loadScript(			"amengine.aspx?config.mn=DDK2_Responsive_Template&ddk.mode=script&ddk.widget.js=" + 			widgets.js + 			K.toRequestURL()		);	}		// there will always be a content widget once the default page is created	dataConfig = [		DDK.config.widget.css ? { widget: DDK.config.widget.css } : null,		DDK.config.widget.content ? { widget: DDK.config.widget.content } : null	];	url = "amengine.aspx?config.mn=DDK_Data_Request&data.config=" + 		DDK.escape.brackets(JSON.stringify(dataConfig));		DDK.dynamicLoad.done(function () {		$.when($.ajax({			url: url,			dataType: "json",			type: "POST",			// send the global keyword hash			// except sec.* keywords			data: K.toRequestData(),			success: function (data) {				var datasets = data && data.datasets,					css = datasets && datasets[0],					content = datasets && datasets[1],					$loading = $("#loading"),					$loadingMask = $("#loading_mask");				// appending style directly to the head instead of 				// using a direct file link from AMEngine				// because Chrome seems to break CSS parsing/application on the 'text/html'				// MIME type that is sent by AMEngine				// tried using a $.loadStyle function (like $.loadScript)				// but it didn't work				// http://stackoverflow.com/questions/6915338/css-was-not-loaded-because-its-mime-type-text-html-is-not-text-css				if (css) {					$("head").append("<style>" + css + "</style>");				}								if (content) {					// add content to the body					// so it shows up under the loading mask					$("body").prepend(content);										// fire DDK.defer callbacks to initialize content					DDK.resourcesLoad.resolve();										// fade out loading message					$loading.fadeOut(300, function () {						$loading.remove();												// then fade out mask (fade in content						$loadingMask.fadeOut(300, function () {							$loadingMask.remove();						});					});				}			}		}));	});};