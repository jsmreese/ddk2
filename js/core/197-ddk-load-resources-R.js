// initial population of global keyword hashK(DDK_KEYWORDS);DDK.loadResources = function () {	var widgets = DDK_CONFIG && DDK_CONFIG.widget,		links = DDK_CONFIG && DDK_CONFIG.link && DDK_CONFIG.link.js && DDK_CONFIG.link.js.split(DDK.regex.delimiter) || [],		dataConfig, url;	// if no page content is specified	// load the documentation home page for the Responsive Template	if (!(widgets.css || widgets.content || widgets.js)) {		// ... create doc home page CSS/Content/JS widgets	}		// load plugins script	$.loadScript('resources/ddk/' + DDK_PATH + '/js/ddk2-plugins-responsive-' + DDK_BUILD + DDK_MIN + '.js');	// load js links	_.each(links, function (link) {		$.loadScript(link);	});		// load dynamic script	if (widgets.js) {		$.loadScript(			"amengine.aspx?config.mn=DDK2_Responsive_Template&ddk.mode=script&ddk.widget.js=" + 			widgets.js + 			K.toRequestURL()		);	}		// there will always be a content widget once the default page is created	dataConfig = [		widgets.css ? { widget: widgets.css } : null,		widgets.content ? { widget: widgets.content } : null	];	url = "amengine.aspx?config.mn=DDK_Data_Request&data.config=" + 		DDK.escape.brackets(JSON.stringify(dataConfig));		$.ajax({		url: url,		dataType: "json",		type: "POST",		// send the global keyword hash		// except sec.* keywords		data: K.toRequestData(),		success: function (data) {			var datasets = data && data.datasets,				css = datasets && datasets[0],				content = datasets && datasets[1],				$loading = $("#loading"),				$loadingMask = $("#loading_mask");			// defer rendering of the content			// until the plugins script is loaded			DDK.deferPlugins(function () {				// appending style directly to the head instead of 				// using a direct file link from AMEngine				// because Chrome seems to break CSS parsing/application on the 'text/html'				// MIME type that is sent by AMEngine				// tried using a $.loadStyle function (like $.loadScript)				// but it didn't work				// http://stackoverflow.com/questions/6915338/css-was-not-loaded-because-its-mime-type-text-html-is-not-text-css				if (css) {					$("head").append("<style>" + DDK.unescape.brackets(css) + "</style>");				}								if (content) {					// add content to the body					// so it shows up under the loading mask					$("body").prepend(DDK.unescape.brackets(content));										// initialize Foundation					$(document).foundation();														// fire DDK.defer callbacks to initialize content					DDK.resourcesLoad.resolve();										// fade out loading message					$loading.fadeOut(300, function () {						$loading.remove();												// then fade out mask (fade in content						$loadingMask.fadeOut(300, function () {							$loadingMask.remove();						});					});				}			});		}	});};DDK.loadResources();