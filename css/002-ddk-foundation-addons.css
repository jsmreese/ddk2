h1 { font-size: 2rem; }
h2 { font-size: 1.5rem; }
h3 { font-size: 1.25rem; }
h4 { font-size: 1.125rem; }
h5 { font-size: 1rem; }
h6 { font-size: 0.875rem; }

@media only screen and (min-width: 40.063em) {
  h1 { font-size: 2.25rem; }
  h2 { font-size: 1.75rem; }
  h3 { font-size: 1.5rem; }
  h4 { font-size: 1.25rem; }
  h5 { font-size: 1.125rem; }
  h6 { font-size: 1rem; } }

.pre-wrap {
	white-space: pre-wrap;
	word-wrap: break-word; /* chrome */
	word-break: break-all; /* firefox */
}

/* larger off-canvas */
.move-right>.inner-wrap {
	-ms-transform: translate(300px,0);
	-webkit-transform: translate3d(300px,0,0);
	-moz-transform: translate3d(300px,0,0);
	-ms-transform: translate3d(300px,0,0);
	-o-transform: translate3d(300px,0,0);
	transform: translate3d(300px,0,0);
}

/* Firefox and IE list errors */
ul.off-canvas-list ul {
    list-style-type: none;
}

.left-off-canvas-menu {
	width: 300px;
}


.left-off-canvas-menu .select2-drop {
	border: 0;
	border-radius: 0;
}


/* min height for content loading */
[data-fav] {
	min-height: 100px;
}

/* fix text-align on select2 containers for the 'prefix' option */
.select2-container.prefix {
	text-align: inherit;
}

/* using controls within the grid */

.column > [id^="psc_"][id$="_widget"],
.columns > [id^="psc_"][id$="_widget"] {
	margin-bottom: 20px;
	margin-top: 20px;
}

/* responsive template header modes */
.ddk-header-mode-basic .hide-for-basic {
	display: none;
}


/* buttons in controls and ddk dialogs */
[id^="psc_"][id$="_widget"] button,
.ddk-dialog button {
	margin-bottom: 0;
}

/* postfix buttons */
button.postfix, .button.postfix {
	padding-left: 1em;
	padding-right: 1em;
}

/* full width rows */
.row.full {
	max-width: none;
}

.off-canvas-wrap {
	min-height: 100%;
}

/* off-canvas-list dropdowns */
.off-canvas-list li > a {
	position: relative;
}



/* off-canvas bottom should not be fixed to the content bottom, but should take up the full viewport height */
.left-off-canvas-menu {
	/* bottom: initial; Can't do this because off-canvas pane won't scroll for small content */
	/* height: 100vh; 
	 * Would like to do this, but support isn't there for old android, 
	 * and it turns out a little weird. Really would like:
	 * height: max(100vh, 100%); 
	 */ 
}

/* tabs content should have consitent padding */
.tabs-content > .content,
.tabs-content.vertical > .content {
  padding: 0.9375rem; }

/* tabs only need vertical class on .tabs element, not .tabs-content element */
.tabs.vertical + .tabs-content {
  display: block; }

@media only screen and (min-width: 40.063em) {
  .tabs.vertical + .tabs-content {
    width: 80%;
    float: left;
    margin-left: -1px; } }


/* block grid for any child */
.row[class*="-block-grid-"] > * {
	height: auto;
	float: left !important;
	padding: 0 0.5rem 0.5rem;
}

.row.collapse[class*="-block-grid-"] > * {
	padding: 0;
}

.small-block-grid-1 > * { width: 100%; }
.small-block-grid-2 > * { width: 50%; }
.small-block-grid-3 > * { width: 33.33333%; }
.small-block-grid-4 > * { width: 25%; }
.small-block-grid-5 > * { width: 20%; }
.small-block-grid-6 > * { width: 16.66667%; }
.small-block-grid-7 > * { width: 14.28571%; }
.small-block-grid-8 > * { width: 12.5%; }
.small-block-grid-9 > * { width: 11.11111%; }
.small-block-grid-10 > * { width: 10%; }
.small-block-grid-11 > * { width: 9.09091%; }
.small-block-grid-12 > * { width: 8.33333%; }

.small-block-grid-1 > *:nth-of-type(n) { clear: none; }
.small-block-grid-1 > *:nth-of-type(1n+1) { clear: both; }
.small-block-grid-2 > *:nth-of-type(n) { clear: none; }
.small-block-grid-2 > *:nth-of-type(2n+1) { clear: both; }
.small-block-grid-3 > *:nth-of-type(n) { clear: none; }
.small-block-grid-3 > *:nth-of-type(3n+1) { clear: both; }
.small-block-grid-4 > *:nth-of-type(n) { clear: none; }
.small-block-grid-4 > *:nth-of-type(4n+1) { clear: both; }
.small-block-grid-5 > *:nth-of-type(n) { clear: none; }
.small-block-grid-5 > *:nth-of-type(5n+1) { clear: both; }
.small-block-grid-6 > *:nth-of-type(n) { clear: none; }
.small-block-grid-6 > *:nth-of-type(6n+1) { clear: both; }
.small-block-grid-7 > *:nth-of-type(n) { clear: none; }
.small-block-grid-7 > *:nth-of-type(7n+1) { clear: both; }
.small-block-grid-8 > *:nth-of-type(n) { clear: none; }
.small-block-grid-8 > *:nth-of-type(8n+1) { clear: both; }
.small-block-grid-9 > *:nth-of-type(n) { clear: none; }
.small-block-grid-9 > *:nth-of-type(9n+1) { clear: both; }
.small-block-grid-10 > *:nth-of-type(n) { clear: none; }
.small-block-grid-10 > *:nth-of-type(10n+1) { clear: both; }
.small-block-grid-11 > *:nth-of-type(n) { clear: none; }
.small-block-grid-11 > *:nth-of-type(11n+1) { clear: both; }
.small-block-grid-12 > *:nth-of-type(n) { clear: none; }
.small-block-grid-12 > *:nth-of-type(12n+1) { clear: both; }

@media only screen and (min-width: 40.063em) {
	.medium-block-grid-1 > * { width: 100%; }
	.medium-block-grid-2 > * { width: 50%; }
	.medium-block-grid-3 > * { width: 33.33333%; }
	.medium-block-grid-4 > * { width: 25%; }
	.medium-block-grid-5 > * { width: 20%; }
	.medium-block-grid-6 > * { width: 16.66667%; }
	.medium-block-grid-7 > * { width: 14.28571%; }
	.medium-block-grid-8 > * { width: 12.5%; }
	.medium-block-grid-9 > * { width: 11.11111%; }
	.medium-block-grid-10 > * { width: 10%; }
	.medium-block-grid-11 > * { width: 9.09091%; }
	.medium-block-grid-12 > * { width: 8.33333%; }
	
	.medium-block-grid-1 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-1 > *:nth-of-type(1n+1) { clear: both; }
	.medium-block-grid-2 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-2 > *:nth-of-type(2n+1) { clear: both; }
	.medium-block-grid-3 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-3 > *:nth-of-type(3n+1) { clear: both; }
	.medium-block-grid-4 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-4 > *:nth-of-type(4n+1) { clear: both; }
	.medium-block-grid-5 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-5 > *:nth-of-type(5n+1) { clear: both; }
	.medium-block-grid-6 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-6 > *:nth-of-type(6n+1) { clear: both; }
	.medium-block-grid-7 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-7 > *:nth-of-type(7n+1) { clear: both; }
	.medium-block-grid-8 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-8 > *:nth-of-type(8n+1) { clear: both; }
	.medium-block-grid-9 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-9 > *:nth-of-type(9n+1) { clear: both; }
	.medium-block-grid-10 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-10 > *:nth-of-type(10n+1) { clear: both; }
	.medium-block-grid-11 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-11 > *:nth-of-type(11n+1) { clear: both; }
	.medium-block-grid-12 > *:nth-of-type(n) { clear: none; }
	.medium-block-grid-12 > *:nth-of-type(12n+1) { clear: both; }
}

@media only screen and (min-width: 64.063em) {
	.large-block-grid-1 > * { width: 100%; }
	.large-block-grid-2 > * { width: 50%; }
	.large-block-grid-3 > * { width: 33.33333%; }
	.large-block-grid-4 > * { width: 25%; }
	.large-block-grid-5 > * { width: 20%; }
	.large-block-grid-6 > * { width: 16.66667%; }
	.large-block-grid-7 > * { width: 14.28571%; }
	.large-block-grid-8 > * { width: 12.5%; }
	.large-block-grid-9 > * { width: 11.11111%; }
	.large-block-grid-10 > * { width: 10%; }
	.large-block-grid-11 > * { width: 9.09091%; }
	.large-block-grid-12 > * { width: 8.33333%; }
	
	.large-block-grid-1 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-1 > *:nth-of-type(1n+1) { clear: both; }
	.large-block-grid-2 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-2 > *:nth-of-type(2n+1) { clear: both; }
	.large-block-grid-3 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-3 > *:nth-of-type(3n+1) { clear: both; }
	.large-block-grid-4 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-4 > *:nth-of-type(4n+1) { clear: both; }
	.large-block-grid-5 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-5 > *:nth-of-type(5n+1) { clear: both; }
	.large-block-grid-6 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-6 > *:nth-of-type(6n+1) { clear: both; }
	.large-block-grid-7 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-7 > *:nth-of-type(7n+1) { clear: both; }
	.large-block-grid-8 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-8 > *:nth-of-type(8n+1) { clear: both; }
	.large-block-grid-9 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-9 > *:nth-of-type(9n+1) { clear: both; }
	.large-block-grid-10 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-10 > *:nth-of-type(10n+1) { clear: both; }
	.large-block-grid-11 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-11 > *:nth-of-type(11n+1) { clear: both; }
	.large-block-grid-12 > *:nth-of-type(n) { clear: none; }
	.large-block-grid-12 > *:nth-of-type(12n+1) { clear: both; }
}

@media only screen and (min-width: 120.063em) {
	.xlarge-block-grid-1 > * { width: 100%; }
	.xlarge-block-grid-2 > * { width: 50%; }
	.xlarge-block-grid-3 > * { width: 33.33333%; }
	.xlarge-block-grid-4 > * { width: 25%; }
	.xlarge-block-grid-5 > * { width: 20%; }
	.xlarge-block-grid-6 > * { width: 16.66667%; }
	.xlarge-block-grid-7 > * { width: 14.28571%; }
	.xlarge-block-grid-8 > * { width: 12.5%; }
	.xlarge-block-grid-9 > * { width: 11.11111%; }
	.xlarge-block-grid-10 > * { width: 10%; }
	.xlarge-block-grid-11 > * { width: 9.09091%; }
	.xlarge-block-grid-12 > * { width: 8.33333%; }
	
	.xlarge-block-grid-1 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-1 > *:nth-of-type(1n+1) { clear: both; }
	.xlarge-block-grid-2 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-2 > *:nth-of-type(2n+1) { clear: both; }
	.xlarge-block-grid-3 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-3 > *:nth-of-type(3n+1) { clear: both; }
	.xlarge-block-grid-4 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-4 > *:nth-of-type(4n+1) { clear: both; }
	.xlarge-block-grid-5 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-5 > *:nth-of-type(5n+1) { clear: both; }
	.xlarge-block-grid-6 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-6 > *:nth-of-type(6n+1) { clear: both; }
	.xlarge-block-grid-7 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-7 > *:nth-of-type(7n+1) { clear: both; }
	.xlarge-block-grid-8 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-8 > *:nth-of-type(8n+1) { clear: both; }
	.xlarge-block-grid-9 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-9 > *:nth-of-type(9n+1) { clear: both; }
	.xlarge-block-grid-10 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-10 > *:nth-of-type(10n+1) { clear: both; }
	.xlarge-block-grid-11 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-11 > *:nth-of-type(11n+1) { clear: both; }
	.xlarge-block-grid-12 > *:nth-of-type(n) { clear: none; }
	.xlarge-block-grid-12 > *:nth-of-type(12n+1) { clear: both; }
}

@media only screen and (min-width: 64.063em) {
	.xxlarge-block-grid-1 > * { width: 100%; }
	.xxlarge-block-grid-2 > * { width: 50%; }
	.xxlarge-block-grid-3 > * { width: 33.33333%; }
	.xxlarge-block-grid-4 > * { width: 25%; }
	.xxlarge-block-grid-5 > * { width: 20%; }
	.xxlarge-block-grid-6 > * { width: 16.66667%; }
	.xxlarge-block-grid-7 > * { width: 14.28571%; }
	.xxlarge-block-grid-8 > * { width: 12.5%; }
	.xxlarge-block-grid-9 > * { width: 11.11111%; }
	.xxlarge-block-grid-10 > * { width: 10%; }
	.xxlarge-block-grid-11 > * { width: 9.09091%; }
	.xxlarge-block-grid-12 > * { width: 8.33333%; }
	
	.xxlarge-block-grid-1 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-1 > *:nth-of-type(1n+1) { clear: both; }
	.xxlarge-block-grid-2 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-2 > *:nth-of-type(2n+1) { clear: both; }
	.xxlarge-block-grid-3 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-3 > *:nth-of-type(3n+1) { clear: both; }
	.xxlarge-block-grid-4 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-4 > *:nth-of-type(4n+1) { clear: both; }
	.xxlarge-block-grid-5 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-5 > *:nth-of-type(5n+1) { clear: both; }
	.xxlarge-block-grid-6 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-6 > *:nth-of-type(6n+1) { clear: both; }
	.xxlarge-block-grid-7 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-7 > *:nth-of-type(7n+1) { clear: both; }
	.xxlarge-block-grid-8 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-8 > *:nth-of-type(8n+1) { clear: both; }
	.xxlarge-block-grid-9 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-9 > *:nth-of-type(9n+1) { clear: both; }
	.xxlarge-block-grid-10 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-10 > *:nth-of-type(10n+1) { clear: both; }
	.xxlarge-block-grid-11 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-11 > *:nth-of-type(11n+1) { clear: both; }
	.xxlarge-block-grid-12 > *:nth-of-type(n) { clear: none; }
	.xxlarge-block-grid-12 > *:nth-of-type(12n+1) { clear: both; }
}

